"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4477],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=n(7462),r=(n(7294),n(4137));const o={sidebar_position:1},i="Basic",c={unversionedId:"notes/Git/basic",id:"notes/Git/basic",title:"Basic",description:"Links",source:"@site/docs/notes/Git/basic.md",sourceDirName:"notes/Git",slug:"/notes/Git/basic",permalink:"/docs/notes/Git/basic",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"notes",previous:{title:"Nodejs dockerfile",permalink:"/docs/notes/Docker/nodejs"},next:{title:"Undo git add",permalink:"/docs/notes/Git/undo_git_add"}},s={},l=[{value:"Links",id:"links",level:2},{value:"Config",id:"config",level:2},{value:"SSH",id:"ssh",level:3},{value:"Local config",id:"local-config",level:3},{value:"Command",id:"command",level:2},{value:"branches",id:"branches",level:2},{value:"Create a new branch",id:"create-a-new-branch",level:3},{value:"Goto exist branch",id:"goto-exist-branch",level:3}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"basic"},"Basic"),(0,r.kt)("h2",{id:"links"},"Links"),(0,r.kt)("p",null,"Download the git from ",(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/downloads"},"https://git-scm.com/downloads")),(0,r.kt)("h2",{id:"config"},"Config"),(0,r.kt)("h3",{id:"ssh"},"SSH"),(0,r.kt)("p",null,"Set the ssh from Github:",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"},"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen\n\ncat .ssh/id_rsa.pub\n")),(0,r.kt)("h3",{id:"local-config"},"Local config"),(0,r.kt)("p",null,"For windows, install the nano from ",(0,r.kt)("inlineCode",{parentName:"p"},"choco")," is the easiest way. Install ",(0,r.kt)("inlineCode",{parentName:"p"},"choco")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"node.js")," first."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"choco install -y nano\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'git config --global core.editor "nano"\ngit config --global user.name "Reemo"\ngit config --global user.email "reemo@gmail.com"\n')),(0,r.kt)("h2",{id:"command"},"Command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'git add .\ngit commit -m "message"\n\ngit pull\ngit push\n')),(0,r.kt)("h2",{id:"branches"},"branches"),(0,r.kt)("h3",{id:"create-a-new-branch"},"Create a new branch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b <brance_name>\n\ngit checkout -b development\n")),(0,r.kt)("h3",{id:"goto-exist-branch"},"Goto exist branch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout <brance_name>\n\ngit checkout development\n")))}u.isMDXComponent=!0}}]);