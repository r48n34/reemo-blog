"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3736],{4137:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),d=s,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return t?a.createElement(g,o(o({ref:n},c),{},{components:t})):a.createElement(g,o({ref:n},c))}));function g(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[u]="string"==typeof e?e:s,o[1]=i;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2757:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=t(7462),s=(t(7294),t(4137));const r={},o="[Scan] Nmap",i={unversionedId:"notes/Security/Networking/[Scan]_nmap",id:"notes/Security/Networking/[Scan]_nmap",title:"[Scan] Nmap",description:"Basic",source:"@site/docs/notes/Security/Networking/[Scan]_nmap.mdx",sourceDirName:"notes/Security/Networking",slug:"/notes/Security/Networking/[Scan]_nmap",permalink:"/docs/notes/Security/Networking/[Scan]_nmap",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"notes",previous:{title:"[Connection] Netcat",permalink:"/docs/notes/Security/Networking/[Connection]_netcat"},next:{title:"[Services] General Services",permalink:"/docs/notes/Security/Networking/[Services]_general_services"}},l={},p=[{value:"Basic",id:"basic",level:2},{value:"Basic scans",id:"basic-scans",level:2},{value:"Scans subnet",id:"scans-subnet",level:3},{value:"OS Scanning",id:"os-scanning",level:3},{value:"Popular Ports only",id:"popular-ports-only",level:3},{value:"1000 well-known ports.",id:"1000-well-known-ports",level:3},{value:"Disable DNS Name Resolution",id:"disable-dns-name-resolution",level:3},{value:"Stealth scan",id:"stealth-scan",level:2},{value:"Version scanning",id:"version-scanning",level:2},{value:"Services versions scan",id:"services-versions-scan",level:3},{value:"Specific Port Scanning",id:"specific-port-scanning",level:2},{value:"Single port only",id:"single-port-only",level:3},{value:"Aggressive Scanning",id:"aggressive-scanning",level:2},{value:"Verbose Output",id:"verbose-output",level:2},{value:"With logs",id:"with-logs",level:3},{value:"Exported text file",id:"exported-text-file",level:3},{value:"Scanning Multiple Hosts",id:"scanning-multiple-hosts",level:2},{value:"Scan several ip at once",id:"scan-several-ip-at-once",level:3},{value:"subnets at once.",id:"subnets-at-once",level:3},{value:"Full scanning",id:"full-scanning",level:2},{value:"IRL usage",id:"irl-usage",level:2},{value:"Scan Mysql version",id:"scan-mysql-version",level:3},{value:"More flag",id:"more-flag",level:2},{value:"Overall help",id:"overall-help",level:2}],c={toc:p},u="wrapper";function m(e){let{components:n,...t}=e;return(0,s.kt)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"scan-nmap"},"[Scan]"," Nmap"),(0,s.kt)("h2",{id:"basic"},"Basic"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -v -A scanme.nmap.org\n")),(0,s.kt)("h2",{id:"basic-scans"},"Basic scans"),(0,s.kt)("h3",{id:"scans-subnet"},"Scans subnet"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Scans the list of devices up and running on a given subnet.  ")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sp scanme.nmap.org\n")),(0,s.kt)("h3",{id:"os-scanning"},"OS Scanning"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"OS Scanning, return information on the OS")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -O scanme.nmap.org\n")),(0,s.kt)("h3",{id:"popular-ports-only"},"Popular Ports only"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Popular Ports, automatically scans a number of the most 'popular' ports for a host.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap --top-ports 20 scanme.nmap.org\n")),(0,s.kt)("h3",{id:"1000-well-known-ports"},"1000 well-known ports."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Scans a single host for 1000 well-known ports.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap scanme.nmap.org\n")),(0,s.kt)("h3",{id:"disable-dns-name-resolution"},"Disable DNS Name Resolution"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sp -n 192.100.1.1/24\n")),(0,s.kt)("h2",{id:"stealth-scan"},"Stealth scan"),(0,s.kt)("p",null,"stealth scanning is slower and not as aggressive as the other types of scanning,\nso you might have to wait a while to get a response."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sS scanme.nmap.org\n")),(0,s.kt)("h2",{id:"version-scanning"},"Version scanning"),(0,s.kt)("h3",{id:"services-versions-scan"},"Services versions scan"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Provide a list of services with its versions. ")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sV scanme.nmap.org\n")),(0,s.kt)("h2",{id:"specific-port-scanning"},"Specific Port Scanning"),(0,s.kt)("h3",{id:"single-port-only"},"Single port only"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Using the -p param to scan for a single port ")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -p 973 192.164.0.1\n")),(0,s.kt)("h2",{id:"aggressive-scanning"},"Aggressive Scanning"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Enables OS detection, version detection, script scanning, and traceroute. "),(0,s.kt)("li",{parentName:"ul"},"However, an aggressive scan also sends out more probes, and it is more likely to be detected during security audits.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -A scanme.nmap.org\n")),(0,s.kt)("h2",{id:"verbose-output"},"Verbose Output"),(0,s.kt)("h3",{id:"with-logs"},"With logs"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"output provides additional information about the scan being performed.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -v scanme.nmap.org\n")),(0,s.kt)("h3",{id:"exported-text-file"},"Exported text file"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -oN output.txt scanme.nmap.org\n")),(0,s.kt)("h2",{id:"scanning-multiple-hosts"},"Scanning Multiple Hosts"),(0,s.kt)("h3",{id:"scan-several-ip-at-once"},"Scan several ip at once"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap 192.164.1.1 192.164.0.2 192.164.0.2\n")),(0,s.kt)("h3",{id:"subnets-at-once"},"subnets at once."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Use the asterisk (*) to scan all of the subnets at once")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap 192.164.1.*\n")),(0,s.kt)("h2",{id:"full-scanning"},"Full scanning"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nmap -sC -sV -T4 -v <IP> -oN init.nmap\n\n-sC: Performs a script scan using the default set of scripts\n-sV: Enables version detection\n-T<num>: paranoid (0), sneaky (1), polite (2), normal (3), aggressive (4), and insane (5)\n-v: Increases the verbosity level, causing Nmap to print more information about the scan in progress.\n    AKA print info\n")),(0,s.kt)("h2",{id:"irl-usage"},"IRL usage"),(0,s.kt)("h3",{id:"scan-mysql-version"},"Scan Mysql version"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Scan Mysql with version by -sC")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nmap -sC -p 3306 10.129.26.2\n")),(0,s.kt)("h2",{id:"more-flag"},"More flag"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-P-"),": Scan all ports  "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-vv"),": Verbosity level two  ")),(0,s.kt)("h2",{id:"overall-help"},"Overall help"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-md"},"Nmap 7.93 ( https://nmap.org )\nUsage: nmap [Scan Type(s)] [Options] {target specification}\nTARGET SPECIFICATION:\n  Can pass hostnames, IP addresses, networks, etc.\n  Ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254\n  -iL <inputfilename>: Input from list of hosts/networks\n  -iR <num hosts>: Choose random targets\n  --exclude <host1[,host2][,host3],...>: Exclude hosts/networks\n  --excludefile <exclude_file>: Exclude list from file\nHOST DISCOVERY:\n  -sL: List Scan - simply list targets to scan\n  -sn: Ping Scan - disable port scan\n  -Pn: Treat all hosts as online -- skip host discovery\n  -PS/PA/PU/PY[portlist]: TCP SYN/ACK, UDP or SCTP discovery to given ports\n  -PE/PP/PM: ICMP echo, timestamp, and netmask request discovery probes\n  -PO[protocol list]: IP Protocol Ping\n  -n/-R: Never do DNS resolution/Always resolve [default: sometimes]\n  --dns-servers <serv1[,serv2],...>: Specify custom DNS servers\n  --system-dns: Use OS's DNS resolver\n  --traceroute: Trace hop path to each host\nSCAN TECHNIQUES:\n  -sS/sT/sA/sW/sM: TCP SYN/Connect()/ACK/Window/Maimon scans\n  -sU: UDP Scan\n  -sN/sF/sX: TCP Null, FIN, and Xmas scans\n  --scanflags <flags>: Customize TCP scan flags\n  -sI <zombie host[:probeport]>: Idle scan\n  -sY/sZ: SCTP INIT/COOKIE-ECHO scans\n  -sO: IP protocol scan\n  -b <FTP relay host>: FTP bounce scan\nPORT SPECIFICATION AND SCAN ORDER:\n  -p <port ranges>: Only scan specified ports\n    Ex: -p22; -p1-65535; -p U:53,111,137,T:21-25,80,139,8080,S:9\n  --exclude-ports <port ranges>: Exclude the specified ports from scanning\n  -F: Fast mode - Scan fewer ports than the default scan\n  -r: Scan ports sequentially - don't randomize\n  --top-ports <number>: Scan <number> most common ports\n  --port-ratio <ratio>: Scan ports more common than <ratio>\nSERVICE/VERSION DETECTION:\n  -sV: Probe open ports to determine service/version info\n  --version-intensity <level>: Set from 0 (light) to 9 (try all probes)\n  --version-light: Limit to most likely probes (intensity 2)\n  --version-all: Try every single probe (intensity 9)\n  --version-trace: Show detailed version scan activity (for debugging)\nSCRIPT SCAN:\n  -sC: equivalent to --script=default\n  --script=<Lua scripts>: <Lua scripts> is a comma separated list of\n           directories, script-files or script-categories\n  --script-args=<n1=v1,[n2=v2,...]>: provide arguments to scripts\n  --script-args-file=filename: provide NSE script args in a file\n  --script-trace: Show all data sent and received\n  --script-updatedb: Update the script database.\n  --script-help=<Lua scripts>: Show help about scripts.\n           <Lua scripts> is a comma-separated list of script-files or\n           script-categories.\nOS DETECTION:\n  -O: Enable OS detection\n  --osscan-limit: Limit OS detection to promising targets\n  --osscan-guess: Guess OS more aggressively\nTIMING AND PERFORMANCE:\n  Options which take <time> are in seconds, or append 'ms' (milliseconds),\n  's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m).\n  -T<0-5>: Set timing template (higher is faster)\n  --min-hostgroup/max-hostgroup <size>: Parallel host scan group sizes\n  --min-parallelism/max-parallelism <numprobes>: Probe parallelization\n  --min-rtt-timeout/max-rtt-timeout/initial-rtt-timeout <time>: Specifies\n      probe round trip time.\n  --max-retries <tries>: Caps number of port scan probe retransmissions.\n  --host-timeout <time>: Give up on target after this long\n  --scan-delay/--max-scan-delay <time>: Adjust delay between probes\n  --min-rate <number>: Send packets no slower than <number> per second\n  --max-rate <number>: Send packets no faster than <number> per second\nFIREWALL/IDS EVASION AND SPOOFING:\n  -f; --mtu <val>: fragment packets (optionally w/given MTU)\n  -D <decoy1,decoy2[,ME],...>: Cloak a scan with decoys\n  -S <IP_Address>: Spoof source address\n  -e <iface>: Use specified interface\n  -g/--source-port <portnum>: Use given port number\n  --proxies <url1,[url2],...>: Relay connections through HTTP/SOCKS4 proxies\n  --data <hex string>: Append a custom payload to sent packets\n  --data-string <string>: Append a custom ASCII string to sent packets\n  --data-length <num>: Append random data to sent packets\n  --ip-options <options>: Send packets with specified ip options\n  --ttl <val>: Set IP time-to-live field\n  --spoof-mac <mac address/prefix/vendor name>: Spoof your MAC address\n  --badsum: Send packets with a bogus TCP/UDP/SCTP checksum\nOUTPUT:\n  -oN/-oX/-oS/-oG <file>: Output scan in normal, XML, s|<rIpt kIddi3,\n     and Grepable format, respectively, to the given filename.\n  -oA <basename>: Output in the three major formats at once\n  -v: Increase verbosity level (use -vv or more for greater effect)\n  -d: Increase debugging level (use -dd or more for greater effect)\n  --reason: Display the reason a port is in a particular state\n  --open: Only show open (or possibly open) ports\n  --packet-trace: Show all packets sent and received\n  --iflist: Print host interfaces and routes (for debugging)\n  --append-output: Append to rather than clobber specified output files\n  --resume <filename>: Resume an aborted scan\n  --noninteractive: Disable runtime interactions via keyboard\n  --stylesheet <path/URL>: XSL stylesheet to transform XML output to HTML\n  --webxml: Reference stylesheet from Nmap.Org for more portable XML\n  --no-stylesheet: Prevent associating of XSL stylesheet w/XML output\nMISC:\n  -6: Enable IPv6 scanning\n  -A: Enable OS detection, version detection, script scanning, and traceroute\n  --datadir <dirname>: Specify custom Nmap data file location\n  --send-eth/--send-ip: Send using raw ethernet frames or IP packets\n  --privileged: Assume that the user is fully privileged\n  --unprivileged: Assume the user lacks raw socket privileges\n  -V: Print version number\n  -h: Print this help summary page.\nEXAMPLES:\n  nmap -v -A scanme.nmap.org\n  nmap -v -sn 192.168.0.0/16 10.0.0.0/8\n  nmap -v -iR 10000 -Pn -p 80\nSEE THE MAN PAGE (https://nmap.org/book/man.html) FOR MORE OPTIONS AND EXAMPLES\n")))}m.isMDXComponent=!0}}]);