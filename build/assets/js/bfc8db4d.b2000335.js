"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6257],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),h=c(n),u=r,m=h["".concat(l,".").concat(u)]||h[u]||p[u]||o;return n?a.createElement(m,s(s({ref:t},d),{},{components:n})):a.createElement(m,s({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[h]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2126:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(4137));const o={},s="[Hash] Hash base Tools",i={unversionedId:"notes/Security/Forensics/[Hash]_math",id:"notes/Security/Forensics/[Hash]_math",title:"[Hash] Hash base Tools",description:"Common hash result (Hex, Dec, Bin or Octal) (Hash with password)",source:"@site/docs/notes/Security/Forensics/[Hash]_math.mdx",sourceDirName:"notes/Security/Forensics",slug:"/notes/Security/Forensics/[Hash]_math",permalink:"/docs/notes/Security/Forensics/[Hash]_math",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"notes",previous:{title:"[Hash] Exam file hex",permalink:"/docs/notes/Security/Forensics/[Hash]_file_hex"},next:{title:"[Hide] binwalk",permalink:"/docs/notes/Security/Forensics/[Hide]_binwalk"}},l={},c=[{value:"Common hash result (<code>Hex</code>, <code>Dec</code>, <code>Bin</code> or <code>Octal</code>) (Hash with <code>password</code>)",id:"common-hash-result-hex-dec-bin-or-octal-hash-with-password",level:2},{value:"<code>hash-identifier</code>",id:"hash-identifier",level:2},{value:"MD5",id:"md5",level:2},{value:"<code>md5sum</code>",id:"md5sum",level:3},{value:"Hash the <code>password</code> to md5 (<code>-n</code>: no new line)",id:"hash-the-password-to-md5--n-no-new-line",level:4},{value:"base64",id:"base64",level:2},{value:"<code>openssl</code>",id:"openssl",level:3},{value:"Hash the <code>password</code> to md5 (<code>-n</code>: no new line)",id:"hash-the-password-to-md5--n-no-new-line-1",level:4},{value:"CRC32",id:"crc32",level:2},{value:"<code>crc32</code>",id:"crc32-1",level:3},{value:"Hash the <code>password</code> to crc32",id:"hash-the-password-to-crc32",level:4}],d={toc:c},h="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hash-hash-base-tools"},"[Hash]"," Hash base Tools"),(0,r.kt)("h2",{id:"common-hash-result-hex-dec-bin-or-octal-hash-with-password"},"Common hash result (",(0,r.kt)("inlineCode",{parentName:"h2"},"Hex"),", ",(0,r.kt)("inlineCode",{parentName:"h2"},"Dec"),", ",(0,r.kt)("inlineCode",{parentName:"h2"},"Bin")," or ",(0,r.kt)("inlineCode",{parentName:"h2"},"Octal"),") (Hash with ",(0,r.kt)("inlineCode",{parentName:"h2"},"password"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MD5    (",(0,r.kt)("inlineCode",{parentName:"li"},"5f4dcc3b5aa765d61d8327deb882cf99"),")    "),(0,r.kt)("li",{parentName:"ul"},"Base64 (",(0,r.kt)("inlineCode",{parentName:"li"},"cGFzc3dvcmQ="),")     "),(0,r.kt)("li",{parentName:"ul"},"SHA1   (",(0,r.kt)("inlineCode",{parentName:"li"},"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8"),")    "),(0,r.kt)("li",{parentName:"ul"},"ASCII  (",(0,r.kt)("inlineCode",{parentName:"li"},"112 97 115 115 119 111 114 100 "),")    "),(0,r.kt)("li",{parentName:"ul"},"CRC32  (",(0,r.kt)("inlineCode",{parentName:"li"},"1624d322"),")  ")),(0,r.kt)("h2",{id:"hash-identifier"},(0,r.kt)("inlineCode",{parentName:"h2"},"hash-identifier")),(0,r.kt)("p",null,"Software to identify the different types of hashes used to encrypt data and especially passwords."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"hash-identifier\n")),(0,r.kt)("p",null,"Then input the hash code to analysis"),(0,r.kt)("h2",{id:"md5"},"MD5"),(0,r.kt)("h3",{id:"md5sum"},(0,r.kt)("inlineCode",{parentName:"h3"},"md5sum")),(0,r.kt)("p",null,"Calculate the result of a string to md5sum"),(0,r.kt)("h4",{id:"hash-the-password-to-md5--n-no-new-line"},"Hash the ",(0,r.kt)("inlineCode",{parentName:"h4"},"password")," to md5 (",(0,r.kt)("inlineCode",{parentName:"h4"},"-n"),": no new line)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo -n 'password' | md5sum\n")),(0,r.kt)("h2",{id:"base64"},"base64"),(0,r.kt)("h3",{id:"openssl"},(0,r.kt)("inlineCode",{parentName:"h3"},"openssl")),(0,r.kt)("p",null,"Calculate the result of a string to base64"),(0,r.kt)("h4",{id:"hash-the-password-to-md5--n-no-new-line-1"},"Hash the ",(0,r.kt)("inlineCode",{parentName:"h4"},"password")," to md5 (",(0,r.kt)("inlineCode",{parentName:"h4"},"-n"),": no new line)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"echo -n 'password' | openssl enc -base64\n")),(0,r.kt)("h2",{id:"crc32"},"CRC32"),(0,r.kt)("h3",{id:"crc32-1"},(0,r.kt)("inlineCode",{parentName:"h3"},"crc32")),(0,r.kt)("p",null,"Calculate the result of a string to CRC32"),(0,r.kt)("h4",{id:"hash-the-password-to-crc32"},"Hash the ",(0,r.kt)("inlineCode",{parentName:"h4"},"password")," to crc32"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'crc32 <(echo "password")\n')))}p.isMDXComponent=!0}}]);