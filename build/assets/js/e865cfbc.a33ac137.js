"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6288],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6357:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(4137));const s={sidebar_position:5},a="[Adv] JWT for authentication",i={unversionedId:"tutorial/ExpressJs/jwt",id:"tutorial/ExpressJs/jwt",title:"[Adv] JWT for authentication",description:"Install",source:"@site/docs/tutorial/ExpressJs/jwt.md",sourceDirName:"tutorial/ExpressJs",slug:"/tutorial/ExpressJs/jwt",permalink:"/docs/tutorial/ExpressJs/jwt",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorial",previous:{title:"[Basic] Data method",permalink:"/docs/tutorial/ExpressJs/data_method"},next:{title:"[Basic] Basic command",permalink:"/docs/tutorial/Postgre SQL/basic"}},u={},l=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Jwt Utils",id:"jwt-utils",level:3},{value:"Guard function",id:"guard-function",level:3},{value:"Router usage",id:"router-usage",level:3},{value:"Fetch with <code>curl</code>",id:"fetch-with-curl",level:3}],c={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"adv-jwt-for-authentication"},"[Adv]"," JWT for authentication"),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/jsonwebtoken"},"https://www.npmjs.com/package/jsonwebtoken")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add jsonwebtoken\nyarn add -D @types/jsonwebtoken\n\nyarn add permit\nyarn add -D @types/permit\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"jwt-utils"},"Jwt Utils"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'showLineNumbers title="jwtUtils.ts"',showLineNumbers:!0,title:'"jwtUtils.ts"'},'import jwt from \'jsonwebtoken\'\n\nexport const jwtConfig = {\n    secret: "shhhhhhhhhhhh",\n    sessionConfig: {\n        expiresIn: "24h" \n    },\n};\n\n\nexport function encodeDataToJwt(payload: object): string {\n    return jwt.sign(\n        payload,\n        jwtConfig.secret,\n        { ...jwtConfig.sessionConfig }\n    );\n}\n\nexport function decodeDataInJwt(token: string): object{\n    return jwt.verify(token, jwtConfig.secret);\n}\n')),(0,o.kt)("h3",{id:"guard-function"},"Guard function"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'showLineNumbers title="guard.ts"',showLineNumbers:!0,title:'"guard.ts"'},"import { Bearer } from 'permit';\nimport { encodeDataToJwt } from './jwtUtils';\n\nconst permit = new Bearer({\n    query: 'access_token',\n})\n\nexport function isLoginGuard(\n    req:express.Request,\n    res:express.Response,\n    next:express.NextFunction\n){\n    try {\n        \n        const token = permit.check(req);\n    \n        if(!token){\n            throw new Error(\"Missing jwt token.\")\n        }\n    \n        const payload = decodeDataToJwt(token);\n        console.log(payload);\n        \n        // Check users data here if you want\n\n        return next();\n    } \n    catch (error:any) {\n        return res.status(401).json({ status: false, msg: \"Permission Denied.\" });\n    }\n\n}\n")),(0,o.kt)("h3",{id:"router-usage"},"Router usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'showLineNumbers title="usersRouter.ts"',showLineNumbers:!0,title:'"usersRouter.ts"'},'import express, { Request, Response } from "express";\nimport { encodeDataToJwt } from "./jwtUtils"\nimport { isLoginGuard } from "./guard"\n\nexport const usersRouter = express.Router();\n    \nusersRouter.get(\'/dummyLogin\', (req: Request, res: Response) => {\n    return res.status(200).json({ status: true, jwt: encodeDataToJwt({ name: "tom" }) })\n});\n\nusersRouter.get(\'/somePrivateApi\', isLoginGuard , (req: Request, res: Response) => {\n    return res.status(200).json({ status: true })\n});\n')),(0,o.kt)("h3",{id:"fetch-with-curl"},"Fetch with ",(0,o.kt)("inlineCode",{parentName:"h3"},"curl")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -H 'Accept: application/json' -H \"Authorization: Bearer ${TOKEN}\" https://localhost:8080/somePrivateApi\n")))}d.isMDXComponent=!0}}]);